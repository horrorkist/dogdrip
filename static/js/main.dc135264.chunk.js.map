{"version":3,"sources":["atoms.jsx","Header.jsx","Sidebar.jsx","Routes/Home.jsx","App.js","index.js"],"names":["isSidebarOpen","atom","key","default","Nav","styled","div","Wrapper","NavColumn","SideBarBtn","Logo","DropDownMenu","DropDownItem","motion","dropDownItemVariants","hover","color","DropDownList","dropDownListVariants","initial","scale","opacity","animate","exit","LogIn","Overlay","overlayVariants","LogInBox","LogInBoxHeader","LogInBoxBody","logInBoxVariants","Header","useState","dropDownHover","setDropDownHover","inOverlay","setInOverlay","setIsSidebarOpen","useSetRecoilState","onClick","prev","map","board","onMouseEnter","onMouseLeave","variants","whileHover","transition","duration","AnimatePresence","style","originX","originY","icon","faRandom","marginRight","e","stopPropagation","faTimes","type","wrapperVariants","x","Profile","ProfileColumn","ProfileImg","SideMenu","SideMenuBtn","SideMenuDropDown","SideMenuDropDownItem","sVar","sideInitial","height","paddingBottom","sideActivate","sideExit","Sidebar","useRecoilState","sidebar","setSidebar","sideDropDown","setSideDropDown","Fragment","document","querySelector","classList","toggle","targetIndex","findIndex","slice","onMenuBtnClick","replace","faChevronDown","className","find","Main","Tempbox","Home","App","path","element","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dc135264.chunk.js","sourcesContent":["import { atom } from \"recoil\";\n\nexport const isSidebarOpen = atom({\n  key: \"sidebar\",\n  default: false,\n});\n","import { AnimatePresence, motion } from \"framer-motion\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRandom, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSetRecoilState } from \"recoil\";\nimport { isSidebarOpen } from \"./atoms\";\n\nconst Nav = styled.div`\n  background-color: #2e4361;\n  top: 0;\n  height: 60px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  max-width: 1150px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst NavColumn = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin-right: 15px;\n  :nth-child(2) {\n    flex-grow: 1;\n  }\n`;\n\nconst SideBarBtn = styled.div`\n  width: 60px;\n  height: 100%;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  cursor: pointer;\n\n  div {\n    min-height: 2px;\n    width: 70%;\n    background-color: white;\n    margin-bottom: 5px;\n    transition: width 0.5s ease;\n    :first-child {\n      width: 50%;\n    }\n    :last-child {\n      width: 60%;\n    }\n  }\n\n  &:hover {\n    div {\n      width: 50%;\n      :first-child,\n      :last-child {\n        width: 80%;\n      }\n      transition: width 0.5s ease;\n    }\n  }\n`;\n\nconst Logo = styled.div`\n  min-width: 150px;\n  height: 100%;\n  padding: 15px 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: rgba(255, 255, 255, 1);\n  :hover {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  h1 {\n    font-size: 24px;\n  }\n`;\n\nconst DropDownMenu = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DropDownItem = styled(motion.div)`\n  height: 100%;\n  padding: 0px 15px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.7);\n  position: relative;\n  font-size: 15px;\n`;\n\nconst dropDownItemVariants = {\n  hover: {\n    color: \"rgba(255, 255, 255, 1)\",\n  },\n};\n\nconst DropDownList = styled(motion.div)`\n  width: 150px;\n  position: absolute;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  top: 60px;\n  left: 0;\n  background-color: #222222;\n  border: 1px solid rgba(255, 255, 255, 0.8);\n  padding: 20px 15px;\n`;\n\nconst dropDownListVariants = {\n  initial: {\n    scale: 0,\n    opacity: 1,\n  },\n  animate: {\n    scale: 1,\n    opacity: 1,\n  },\n  exit: {\n    scale: 0,\n    opacity: 0,\n  },\n};\n\nconst LogIn = styled.div`\n  padding: 10px 15px;\n  background-color: #1b2a41;\n  border-radius: 30px;\n  color: white;\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nconst overlayVariants = {\n  initial: {\n    opacity: 0,\n  },\n  animate: {\n    opacity: 1,\n  },\n  exit: {\n    opacity: 0,\n  },\n};\n\nconst LogInBox = styled(motion.div)`\n  width: 400px;\n  height: 400px;\n  border-radius: 10px;\n  background-color: #222222;\n`;\n\nconst LogInBoxHeader = styled.div`\n  width: 100%;\n  height: 60px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0px 20px;\n  color: white;\n  border-bottom: 1px solid white;\n`;\n\nconst LogInBoxBody = styled.div`\n  padding: 30px 25px;\n  display: flex;\n  flex-direction: column;\n\n  input {\n    border: none;\n    outline: none;\n    border-radius: 5px;\n    padding: 15px 10px;\n    margin-bottom: 30px;\n    background-color: #494949;\n    color: white;\n    font-size: 16px;\n    ::after {\n      width: 100%;\n    }\n    :hover {\n      transition: border-bottom 0.3s ease;\n    }\n  }\n`;\n\nconst logInBoxVariants = {\n  initial: {\n    scale: 0,\n    opacity: 0,\n  },\n  animate: {\n    scale: 1,\n    opacity: 1,\n  },\n  exit: {\n    opacity: 0,\n  },\n};\n\nfunction Header() {\n  const [dropDownHover, setDropDownHover] = useState(\"\");\n  const [inOverlay, setInOverlay] = useState(false);\n  const BoardList = [\n    \"개드립\",\n    \"유저 개드립\",\n    \"읽을 거리 판\",\n    \"커뮤니티\",\n    \"게임 판\",\n    \"놀이터\",\n    \"기타\",\n  ];\n  const setIsSidebarOpen = useSetRecoilState(isSidebarOpen);\n  return (\n    <>\n      <Nav>\n        <Wrapper>\n          <NavColumn>\n            <SideBarBtn onClick={() => setIsSidebarOpen((prev) => !prev)}>\n              <div></div>\n              <div></div>\n              <div></div>\n            </SideBarBtn>\n            <Logo>\n              <h1>DogDrip.net</h1>\n            </Logo>\n          </NavColumn>\n          <NavColumn>\n            <DropDownMenu>\n              {BoardList.map((board) => (\n                <DropDownItem\n                  key={board}\n                  onMouseEnter={() => setDropDownHover(board)}\n                  onMouseLeave={() => setDropDownHover(\"\")}\n                  variants={dropDownItemVariants}\n                  whileHover=\"hover\"\n                  transition={{ duration: 0.2 }}\n                >\n                  {board}\n                  <AnimatePresence>\n                    {dropDownHover === board ? (\n                      <DropDownList\n                        key={board + \"1\"}\n                        variants={dropDownListVariants}\n                        initial=\"initial\"\n                        animate=\"animate\"\n                        exit=\"exit\"\n                        style={{ originX: 0, originY: 0 }}\n                      ></DropDownList>\n                    ) : null}\n                  </AnimatePresence>\n                </DropDownItem>\n              ))}\n            </DropDownMenu>\n          </NavColumn>\n          <NavColumn>\n            <FontAwesomeIcon\n              icon={faRandom}\n              style={{ color: \"white\", marginRight: 30 }}\n            />\n            <LogIn onClick={() => setInOverlay((prev) => !prev)}>로그인</LogIn>\n          </NavColumn>\n        </Wrapper>\n      </Nav>\n      <AnimatePresence>\n        {inOverlay ? (\n          <Overlay\n            onClick={() => setInOverlay((prev) => !prev)}\n            variants={overlayVariants}\n            initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n          >\n            <LogInBox\n              onClick={(e) => e.stopPropagation()}\n              variants={logInBoxVariants}\n            >\n              <LogInBoxHeader>\n                <span>로그인</span>\n\n                <FontAwesomeIcon icon={faTimes} style={{ color: \"white\" }} />\n              </LogInBoxHeader>\n              <LogInBoxBody>\n                <input type=\"text\" />\n                <input type=\"text\" />\n              </LogInBoxBody>\n            </LogInBox>\n          </Overlay>\n        ) : null}\n      </AnimatePresence>\n    </>\n  );\n}\n\nexport default Header;\n","import { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { isSidebarOpen } from \"./atoms\";\nimport React from \"react\";\n\nconst Wrapper = styled(motion.div)`\n  height: 100vh;\n  position: fixed;\n  z-index: 2;\n  width: 280px;\n  left: 0;\n  top: 0;\n  background-color: #222222;\n  overflow-y: auto;\n`;\n\nconst wrapperVariants = {\n  initial: {\n    x: -280,\n    opacity: 0,\n  },\n  animate: {\n    x: 0,\n    opacity: 1,\n  },\n  exit: {\n    x: -280,\n    opacity: 0,\n  },\n};\n\nconst Profile = styled.div`\n  height: 85px;\n  background-color: #2e4361;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  margin-bottom: 25px;\n`;\n\nconst ProfileColumn = styled.div`\n  height: 100%;\n  margin-right: 20px;\n  :first-child {\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n  }\n  :last-child {\n    flex-grow: 1;\n    h4 {\n      color: white;\n      font-size: 17px;\n      margin-bottom: 10px;\n    }\n    span {\n      color: lightgray;\n    }\n  }\n`;\n\nconst ProfileImg = styled.div`\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background-color: white;\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nconst overlayVariants = {\n  initial: {\n    opacity: 0,\n  },\n  animate: {\n    opacity: 1,\n  },\n  exit: {\n    opacity: 0,\n  },\n};\n\nconst SideMenu = styled.div`\n  width: 100%;\n  padding: 13px 0px;\n  padding-left: 20px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: white;\n  transition: background-color 0.2s ease;\n  cursor: pointer;\n  :hover {\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n  span {\n    font-size: 15px;\n  }\n`;\n\nconst SideMenuBtn = styled(motion.div)`\n  height: 40px;\n  width: 40px;\n  position: absolute;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.3);\n  cursor: pointer;\n  transition: color 0.2s ease;\n  :hover {\n    color: rgba(255, 255, 255, 1);\n  }\n\n  svg {\n    transition: transform 0.3s ease;\n  }\n  .active {\n    transform: rotateX(180deg);\n  }\n`;\n\nconst SideMenuDropDown = styled(motion.div)`\n  width: 100%;\n  overflow: hidden;\n  color: rgba(255, 255, 255, 0.8);\n  box-sizing: content-box;\n`;\n\nconst SideMenuDropDownItem = styled.div`\n  padding: 15px 0px;\n  padding-left: 50px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  transition: all 0.3s ease;\n  color: rgba(100, 100, 100, 1);\n  :hover {\n    background-color: rgba(255, 255, 255, 0.4);\n    color: rgba(255, 255, 255, 0.8);\n  }\n`;\n\nconst sVar = {\n  sideInitial: {\n    height: 0,\n    opacity: 0,\n    paddingBottom: \"0px\",\n  },\n  sideActivate: {\n    height: \"auto\",\n    opacity: 1,\n    paddingBottom: \"15px\",\n  },\n  sideExit: {\n    height: 0,\n    opacity: 0,\n    paddingBottom: \"0px\",\n  },\n};\n\nfunction Sidebar() {\n  const [sidebar, setSidebar] = useRecoilState(isSidebarOpen);\n  const [sideDropDown, setSideDropDown] = useState([]);\n  const BoardList = [\n    \"개드립\",\n    \"유저 개드립\",\n    \"읽을 거리 판\",\n    \"커뮤니티\",\n    \"게임 판\",\n    \"놀이터\",\n    \"기타\",\n  ];\n  const onMenuBtnClick = (board) => {\n    const icon = document.querySelector(\".\" + board);\n    icon.classList.toggle(\"active\");\n    const targetIndex = sideDropDown.findIndex((e) => e === board);\n    targetIndex !== -1\n      ? setSideDropDown((prev) => [\n          ...prev.slice(0, targetIndex),\n          ...prev.slice(targetIndex + 1),\n        ])\n      : setSideDropDown((prev) => [...prev, board]);\n  };\n\n  return (\n    <>\n      <AnimatePresence>\n        {sidebar ? (\n          <Overlay\n            onClick={() => setSidebar(false)}\n            variants={overlayVariants}\n            initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n          >\n            <Wrapper\n              onClick={(e) => e.stopPropagation()}\n              variants={wrapperVariants}\n              transition={{ duration: 0.5, type: \"linear\" }}\n              style={{ originX: 0 }}\n            >\n              <Profile>\n                <ProfileColumn>\n                  <ProfileImg></ProfileImg>\n                </ProfileColumn>\n                <ProfileColumn>\n                  <h4>로그인 및 회원가입</h4>\n                  <span>회원가입하세요!</span>\n                </ProfileColumn>\n              </Profile>\n              {BoardList.map((board) => (\n                <React.Fragment key={board + \"frag\"}>\n                  <SideMenu key={board}>\n                    <span>{board}</span>\n                    <SideMenuBtn\n                      onClick={() => onMenuBtnClick(board.replace(/ /g, \"\"))}\n                    >\n                      <FontAwesomeIcon\n                        icon={faChevronDown}\n                        className={board.replace(/ /g, \"\")}\n                      />\n                    </SideMenuBtn>\n                  </SideMenu>\n                  <AnimatePresence>\n                    {sideDropDown.find((e) => e === board.replace(/ /g, \"\")) ? (\n                      <SideMenuDropDown\n                        key={board + \"Drop\"}\n                        variants={sVar}\n                        initial=\"sideInitial\"\n                        animate=\"sideActivate\"\n                        exit=\"sideExit\"\n                        transition={{\n                          duration: 0.3,\n                          type: \"tween\",\n                        }}\n                        style={{ originX: 0.5, originY: 0 }}\n                      >\n                        <SideMenuDropDownItem>\n                          <span>개드립</span>\n                        </SideMenuDropDownItem>\n                        <SideMenuDropDownItem>\n                          <span>개드립 인기글</span>\n                        </SideMenuDropDownItem>\n                      </SideMenuDropDown>\n                    ) : null}\n                  </AnimatePresence>\n                </React.Fragment>\n              ))}\n            </Wrapper>\n          </Overlay>\n        ) : null}\n      </AnimatePresence>\n    </>\n  );\n}\n\nexport default Sidebar;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nconst Main = styled.div`\n  display: grid;\n  width: 60vw;\n  min-width: 950px;\n  max-width: 1200px;\n  padding: 80px 10px 0px 10px;\n  grid-template-columns: repeat(2, 1fr);\n  column-gap: 10px;\n  row-gap: 20px;\n  background-color: #1e1e1e;\n`;\n\nconst Tempbox = styled.div`\n  height: 400px;\n  background-color: blue;\n`;\n\nfunction Home() {\n  return (\n    <Wrapper>\n      <Main>\n        <Tempbox></Tempbox>\n        <Tempbox></Tempbox>\n        <Tempbox></Tempbox>\n        <Tempbox></Tempbox>\n        <Tempbox></Tempbox>\n        <Tempbox></Tempbox>\n        <Tempbox></Tempbox>\n      </Main>\n    </Wrapper>\n  );\n}\n\nexport default Home;\n","import Header from \"./Header\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Sidebar from \"./Sidebar\";\nimport Home from \"./Routes/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header></Header>\n      <Sidebar></Sidebar>\n      <Routes>\n        <Route path=\"/\" element={<Home></Home>} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { createGlobalStyle } from \"styled-components\";\nimport App from \"./App\";\n\nconst GlobalStyle = createGlobalStyle`\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n* {\n  box-sizing: border-box;\n}\nbody {\n\theight: 200vh;\n\tbackground-color: #222222;\n}\n*::-webkit-scrollbar {\n\tdisplay: none;\n}\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}